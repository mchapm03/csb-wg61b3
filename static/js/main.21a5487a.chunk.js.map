{"version":3,"sources":["components/TDItem.js","components/TDList.js","components/AddItem.js","App.js","index.js"],"names":["backgroundColors","TDItem","id","name","priority","checked","handleDelete","toggleStatus","style","backgroundColor","type","defaultChecked","onClick","className","TDList","title","listItems","map","index","AddItem","newTask","newTaskPriority","handleChange","handleSelChange","handleAdd","placeholder","value","onChange","e","selected","App","useState","Date","now","status","allTasks","setTasks","setNewTask","itemId","prev","filter","i","tasks","length","event","preventDefault","insertIndex","splice","target","item","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.21a5487a.chunk.js","sourcesContent":["const backgroundColors = [\r\n  \"rgb(252, 249, 155)\",\r\n  \"rgb(254,230,201)\",\r\n  \"rgb(253,218,219)\"\r\n];\r\n\r\nexport default function TDItem({\r\n  id,\r\n  name,\r\n  priority,\r\n  checked,\r\n  handleDelete,\r\n  toggleStatus\r\n}) {\r\n  return (\r\n    <div>\r\n      <li key={id} style={{ backgroundColor: backgroundColors[priority] }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={checked}\r\n          onClick={() => toggleStatus(id)}\r\n        ></input>\r\n        <p className=\"item-label\">{name}</p>\r\n        <button className=\"delete-btn\" onClick={() => handleDelete(id)}>\r\n          X\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TDItem from \"./TDItem\";\r\n\r\nexport default function TDList({\r\n  title,\r\n  listItems,\r\n  checked,\r\n  toggleStatus,\r\n  handleDelete\r\n}) {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <ul className=\"no-bullet\">\r\n        {listItems.map(({ name, priority, id }, index) => (\r\n          <TDItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            priority={priority}\r\n            checked={checked}\r\n            handleDelete={handleDelete}\r\n            toggleStatus={toggleStatus}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AddItem({\r\n  newTask,\r\n  newTaskPriority,\r\n  handleChange,\r\n  handleSelChange,\r\n  handleAdd\r\n}) {\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          placeholder=\"New Task\"\r\n          value={newTask}\r\n          onChange={(e) => handleChange(e)}\r\n        ></input>\r\n        <select onChange={handleSelChange} selected={newTaskPriority}>\r\n          <option value=\"2\">high</option>\r\n          <option value=\"1\">medium</option>\r\n          <option value=\"0\">low</option>\r\n        </select>\r\n        <button onClick={(e) => handleAdd(e)}>Add new Task</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport TDList from \"./components/TDList\";\nimport AddItem from \"./components/AddItem\";\n\nexport default function App() {\n  const [allTasks, setTasks] = useState([\n    { name: \"Walk Dog\", id: Date.now() - 2, priority: 2, status: \"done\" },\n    { name: \"Do Laundry\", id: Date.now() - 3, priority: 1, status: \"undone\" },\n    { name: \"Cook Dinner\", id: Date.now() - 1, priority: 0, status: \"undone\" }\n  ]);\n  const [newTask, setNewTask] = useState({ name: \"\", priority: 2 });\n\n  const handleChange = (event) => {\n    setNewTask((prev) => ({ ...prev, name: event.target.value }));\n  };\n\n  const handleSelChange = (event) => {\n    setNewTask((prev) => ({ ...prev, priority: event.target.value }));\n  };\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n    let insertIndex = 0;\n    while (\n      insertIndex < allTasks.length &&\n      allTasks[insertIndex].priority >= newTask.priority\n    ) {\n      insertIndex++;\n    }\n    if (newTask.name) {\n      allTasks.splice(insertIndex, 0, {\n        name: newTask.name,\n        priority: newTask.priority,\n        id: Date.now(),\n        status: \"undone\"\n      });\n      setTasks(allTasks);\n    }\n    setNewTask((prev) => ({ ...prev, name: \"\" }));\n  };\n\n  const handleDelete = (itemId) => {\n    setTasks((prev) => prev.filter((i) => i.id !== itemId));\n  };\n\n  const toggleStatus = (itemId) => {\n    let tasks = [...allTasks];\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].id === itemId) {\n        tasks[i].status = allTasks[i].status === \"done\" ? \"undone\" : \"done\";\n        break;\n      }\n    }\n    setTasks(tasks);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>My List of Tasks</h1>\n      <AddItem\n        handleAdd={handleAdd}\n        newTask={newTask.name}\n        newTaskPriority={newTask.priority}\n        handleSelChange={handleSelChange}\n        handleChange={handleChange}\n      />\n      <TDList\n        title=\"Undone Tasks\"\n        listItems={allTasks.filter((item) => item.status === \"undone\")}\n        checked={false}\n        toggleStatus={toggleStatus}\n        handleDelete={handleDelete}\n      />\n\n      <TDList\n        title=\"Done Tasks\"\n        listItems={allTasks.filter((item) => item.status === \"done\")}\n        checked={true}\n        toggleStatus={toggleStatus}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}